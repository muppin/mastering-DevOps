#### Docker basics ####
docker pull <image name>:tag - pulls the image from (docker.io/library/imagename:tag) docker hub.
docker images - lists the images on the docker host
docker run <image name> - if the image present on the host then simply creates a container, if not pulls the image from docker hub and creates a container
docker run -d --name <container-name> <image name> - runs the container in a detached mode and also gives the name
docker run -it <image name> - runs the container in interactive mode and takes the prompt inside the container
docker ps - lists all containers 
docker ps -a - lists all running containers
docker attach <container_name/id> - takes you inside the container (ctrlP+ctrlQ - exits the container but the container is in running state)(exit - exits the container and the container also stops)
docker start <container_name/id> - starts the container 
docker stop <container_name/id> - stops the container
docker exec -it <container_name/id> /bin/bash - takes you inside the running container
docker stats - shows the stats of a host like usage of memory cpu etc.
docker rm -f <container_name/id> - deletes thr container (-f forcefully deletes even the container is running)
docker rmi -f <image_name/id> - deletes the image (-f forcefully deletes the image even it is in use)
docker build -t <image_name:tag> <path of dockerfile> -  creates a Docker image from a Dockerfile
docker login - logs into your dockerhub account
docker push <image_name> - pushes the image to your dockerhub
docker container prune - removes all stopped containers
docker image prune - removes all unused images
docker container rm -f $(docker container ls -aq) - removes all containers
docker image rm -f $(docker image ls -aq) - removes all images
docker run -d --name my_container <image_name> tail -f /dev/null - In this command, tail -f /dev/null will keep the process running indefinitely, effectively preventing the container from exiting.
docker volume create <volume_name> - to create volume in host file system
docker run -it -v <volume_name>:/data <image_name> /bin/bash - Once a volume is created, you can mount it to a container using the -v or --mount option when running a docker run command.

#### Docker Volumes ####
docker volume create my-vol - Create a volume
docker volume ls - lists the volume on host
docker volume inspect my-vol - inspects the my-vol volume
docker volume rm my-vol - removes the my-vol volume
docker run -d --mount source=my-vol2, target=/app <image_name> - start a container with volume

#### Docker Network ####
docker network create mynetwork - creates a custom bridge network
docker run -d --network mynetwork <image_name> - Runs a container on Custom network
docker network ls - lists all the networks

#### Docker Compose ####
docker-compose -  is a command-line tool that is used to define and manage multi-container Docker applications using a single configuration file.
docker-compose up - command to start your application
docker-compose down - command to stop your application
docker-compose logs - command to can view the logs of the containers
docker-compose config - command can inspect the current configuration of your application
