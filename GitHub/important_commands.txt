#### Git Basics ####
git init - initialises the git the folder and makes it a git repository in the local
git add <file-name> - adds the file to staging area
git add . - adds everything from working directory to staging area
git add -p <file name> - helps committing the part of a file at a time
git commit -m "commit message" - creates a commit to the local repo with the commit message
git log - shows the commit meaages in detail
git log --oneline - shows the commits in a single line
git stash - stores staged or untracked things in a temporary location
git stash list - shows the list of temporary storage
git stash pop stash@{} - brings back the temporarily stored things
git pull origin <branch-name> - pull the new changes from the remote branch to the local
git fetch - It fetches the changes from remote repo including all branches and asks you to merge it.
git push origin <branch name> - It pushes the new commits from local to remote repo
git merge <target branch name> - merges the commits from the target branch
git rebase <branch name> - It rebases the mentioned branch
git cherry-pick <commit id> - It merges the specified commit id 
git rebase -i HEAD~<no of commits> - It merges all commits into one single commit and its ready to merge
git merge --squash source_branch - It merges all commits into one singlr commit and we need to add that commit and merge it
git revert <commit id1> <commit id2> - creates a new commit that undoes the changes in a previous commit.
git reset --soft <commit id> - to reset to a specific commit, but preserve the changes in the staging area.
git reset --mixed <commit id> - to reset to a specific commit and unstage the changes. (git reset <commit id>)
git reset --hard <commit id> - to reset to a specific commit, discarding all changes after that commit.


#### Branches ####
git branch <branch-name> - creates a new branch
git branch -m <new-name> - renames a current branch
git branch -m <old-name> <new-name> - renaming a particular branch
git switch <branch-name> - switches to a particular branch
git checkout -b <new-branch-name> - creates a new branch and switches simultaneously
git branch -d <branch-name> - deletes a branch if it has been pushed 
git branch -D <branch-name> - forcefully deletes a branch even if hasnt been pushed to remote

#### User add ####
git config --global user.name "username"
git config --global user.email "useremail"

#### Remote ####
git remote -v - shows the remote repo urls
git remote add origin "url" - adds the remote url and names it as origin
git remote set-url --add origin url - adds the new url to origin
git remote set-url --delete origin url - deletes the url stored under origin
